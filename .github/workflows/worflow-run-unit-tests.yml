name: Unit Tests
on: [push, workflow_dispatch, pull_request]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests with Gradle
        run: ./gradlew testDebugUnitTest

#      - name: Upload test results
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: test-results
#          path: |
#            **/build/test-results/testDebugUnitTest/
#            **/build/reports/tests/testDebugUnitTest/

      - name: Comment on pull request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const testResultsDir = path.join(process.cwd(), 'build/test-results/testDebugUnitTest');
            const files = fs.readdirSync(testResultsDir);
            let results = '';
            files.forEach(file => {
              if (file.endsWith('.xml')) {
                const content = fs.readFileSync(path.join(testResultsDir, file), 'utf8');
                results += content;
              }
            });
            const comment = `### Unit Test Results\n\n${results}`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });